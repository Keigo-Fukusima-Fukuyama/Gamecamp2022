#include "CTaskManager.h"
//タスクマネージャの外部変数
CTaskManager TaskManager;
//デフォルトコンストラクタ
CTaskManager::CTaskManager()
{
	mHead.mpNext = &mTail;
	mTail.mpPrev = &mHead;
}
CTaskManager::~CTaskManager(){}
//リストに追加
//Add(タスクのポインタ)
void CTaskManager::Add(CTask * addTask) 
{
	//最終ポインタ(mTail)の前に追加
	CTask* task = &mTail;
	//追加ポインタ(addTask)の次をタスクのポインタ(task)を代入
	addTask->mpNext = task;
	//追加ポインタ(addTask)の前をタスクのポインタ(Task)の前に
	addTask->mpPrev = task->mpPrev;
	//追加ポインタ(addTask)の前を次の追加ポインタ(addTask)に代入
	addTask->mpPrev->mpNext = addTask;
	//タスクのポインタ(task)の前を追加ポインタ(addTask)に
	task->mpPrev = addTask;
}
//リストから削除
//Remove(タスクのポインタ)
void CTaskManager::Remove(CTask* task) 
{
	//タスクの前の次を、タスクの次にする
	task->mpPrev->mpNext = task->mpNext;
	//タスクの次の前を、タスクの前にする
	task->mpNext->mpPrev = task->mpPrev;
}
//タスクの削除
void CTaskManager::Delete() 
{
	//先頭から最後まで繰り返し
	CTask* task = mHead.mpNext;
	while (task->mpNext)
	{
		CTask* del = task;
		//次へ
		task = task->mpNext;
		//mEnabledがfalseなら削除
		if (del->mEnabled == false)
		{
			delete del;
		}
	}
}

//更新処理
void CTaskManager::Update()
{
	//先頭から最後まで繰り返し
	CTask* task = mHead.mpNext;
	while (task->mpNext)
	{
		//更新処理を呼ぶ
		task->Update();
		//次へ
		task = task->mpNext;
	}
}

//描画処理
void CTaskManager::Render(){}
